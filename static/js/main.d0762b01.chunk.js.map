{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","React","memo","filterType","setFilterType","inputValue","setInputValue","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","setTodoId","useState","user","setUserId","userId","useEffect","getUser","userFound","href","email","name","App","setTodos","input","setInput","visibleTodos","useMemo","filter","filterTitle","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0762b01.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface TodoListProps {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo) => void,\n}\n\nexport const TodoList: React.FC<TodoListProps>\n  = ({ todos, selectedTodo, setSelectedTodo }) => (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => {\n          const { id, title, completed } = todo;\n\n          return (\n            <tr\n              data-cy=\"todo\"\n              className={classNames(\n                { 'has-background-info-light': selectedTodo?.id === id },\n              )}\n              key={id}\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames(\n                  completed ? 'has-text-success' : 'has-text-danger',\n                )}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => setSelectedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={classNames(\n                      'far',\n                      (selectedTodo?.id === id\n                        ? 'fa-eye-slash'\n                        : 'fa-eye'\n                      ),\n                    )}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n","import React from 'react';\n\ninterface TodoFilterProps {\n  filterType: string,\n  setFilterType: (option: string) => void,\n  inputValue: string;\n  setInputValue: (query: string) => void,\n}\n\nexport const TodoFilter: React.FC<TodoFilterProps> = React.memo((\n  {\n    filterType, setFilterType, inputValue, setInputValue,\n  },\n) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filterType}\n          onChange={(event) => setFilterType(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={inputValue}\n        onChange={(event) => setInputValue(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {inputValue && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setInputValue('')}\n          />\n        </span>\n      )}\n    </p>\n  </form>\n));\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ninterface TodoModalProps {\n  todo: Todo,\n  setTodoId: (todo: Todo | null) => void\n}\n\nexport const TodoModal: React.FC<TodoModalProps> = ({ todo, setTodoId }) => {\n  const [user, setUserId] = useState<User | null>(null);\n  const {\n    id, title, completed, userId,\n  } = todo;\n\n  useEffect(() => {\n    getUser(userId).then(userFound => setUserId(userFound));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user || !todo ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setTodoId(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [input, setInput] = useState('');\n  const [filterType, setFilterType] = useState('all');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos().then(visibleTodos => setTodos(visibleTodos));\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    return todos.filter(todo => {\n      const filterTitle = todo.title\n        .toLowerCase()\n        .includes(input.toLowerCase());\n\n      switch (filterType) {\n        case 'active':\n          return !todo.completed && filterTitle;\n        case 'completed':\n          return todo.completed && filterTitle;\n        default:\n          return filterTitle;\n      }\n    });\n  }, [todos, input, setFilterType]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterType={filterType}\n                setFilterType={setFilterType}\n                inputValue={input}\n                setInputValue={setInput}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          setTodoId={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}